==63921== Memcheck, a memory error detector
==63921== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==63921== Using Valgrind-3.19.0.GIT-lbmacos and LibVEX; rerun with -h for copyright info
==63921== Command: ./minishell
==63921== Parent PID: 63712
==63921== 
==63921== Invalid write of size 8
==63921==    at 0x1000045F9: add_to_table (ft_split.c:70)
==63921==    by 0x100004425: ft_split (ft_split.c:87)
==63921==    by 0x10000492F: ft_get_spllited_path_env (execution_other_builtins.c:31)
==63921==    by 0x100001C8E: data_initializer (minishell.c:36)
==63921==    by 0x100001D2B: main (minishell.c:48)
==63921==  Address 0x1008b4a80 is 80 bytes inside a block of size 81 alloc'd
==63921==    at 0x10012B545: malloc (in /goinfre/hbouqssi/homebrew/Cellar/valgrind/HEAD-6ff08b6/libexec/valgrind/vgpreload_memcheck-amd64-darwin.so)
==63921==    by 0x1000043F5: ft_split (ft_split.c:84)
==63921==    by 0x10000492F: ft_get_spllited_path_env (execution_other_builtins.c:31)
==63921==    by 0x100001C8E: data_initializer (minishell.c:36)
==63921==    by 0x100001D2B: main (minishell.c:48)
==63921== 
==63921== Invalid write of size 8
==63921==    at 0x1000045F9: add_to_table (ft_split.c:70)
==63921==    by 0x100004425: ft_split (ft_split.c:87)
==63921==    by 0x100003E0F: create_env_list (envirenement.c:56)
==63921==    by 0x100001CB4: data_initializer (minishell.c:37)
==63921==    by 0x100001D2B: main (minishell.c:48)
==63921==  Address 0x1008b4e70 is 16 bytes inside a block of size 17 alloc'd
==63921==    at 0x10012B545: malloc (in /goinfre/hbouqssi/homebrew/Cellar/valgrind/HEAD-6ff08b6/libexec/valgrind/vgpreload_memcheck-amd64-darwin.so)
==63921==    by 0x1000043F5: ft_split (ft_split.c:84)
==63921==    by 0x100003E0F: create_env_list (envirenement.c:56)
==63921==    by 0x100001CB4: data_initializer (minishell.c:37)
==63921==    by 0x100001D2B: main (minishell.c:48)
==63921== 
==63921== Conditional jump or move depends on uninitialised value(s)
==63921==    at 0x100003D90: free_tab (envirenement.c:43)
==63921==    by 0x100003E33: create_env_list (envirenement.c:58)
==63921==    by 0x100001CB4: data_initializer (minishell.c:37)
==63921==    by 0x100001D2B: main (minishell.c:48)
==63921== 
==63921== Invalid write of size 8
==63921==    at 0x1000045F9: add_to_table (ft_split.c:70)
==63921==    by 0x100004425: ft_split (ft_split.c:87)
==63921==    by 0x100003E61: create_env_list (envirenement.c:62)
==63921==    by 0x100001CB4: data_initializer (minishell.c:37)
==63921==    by 0x100001D2B: main (minishell.c:48)
==63921==  Address 0x1008b4fd0 is 16 bytes inside a block of size 17 alloc'd
==63921==    at 0x10012B545: malloc (in /goinfre/hbouqssi/homebrew/Cellar/valgrind/HEAD-6ff08b6/libexec/valgrind/vgpreload_memcheck-amd64-darwin.so)
==63921==    by 0x1000043F5: ft_split (ft_split.c:84)
==63921==    by 0x100003E61: create_env_list (envirenement.c:62)
==63921==    by 0x100001CB4: data_initializer (minishell.c:37)
==63921==    by 0x100001D2B: main (minishell.c:48)
==63921== 
==63921== Conditional jump or move depends on uninitialised value(s)
==63921==    at 0x100003D90: free_tab (envirenement.c:43)
==63921==    by 0x100003E85: create_env_list (envirenement.c:64)
==63921==    by 0x100001CB4: data_initializer (minishell.c:37)
==63921==    by 0x100001D2B: main (minishell.c:48)
==63921== 
==63921== Invalid read of size 1
==63921==    at 0x100001F53: ft_strlen (ft_strlen.c:22)
==63921==    by 0x10000277B: ft_strjoin (ft_strjoin.c:23)
==63921==    by 0x100004C66: check_quotes (execution.c:60)
==63921==    by 0x100004D0D: fill_struct (execution.c:79)
==63921==    by 0x100004D88: execution (execution.c:92)
==63921==    by 0x100001EE3: minishel_start (minishell_start.c:70)
==63921==    by 0x100001D67: main (minishell.c:56)
==63921==  Address 0x1009065a0 is 0 bytes inside a block of size 1,000 free'd
==63921==    at 0x10012B91D: free (in /goinfre/hbouqssi/homebrew/Cellar/valgrind/HEAD-6ff08b6/libexec/valgrind/vgpreload_memcheck-amd64-darwin.so)
==63921==    by 0x100004C59: check_quotes (execution.c:59)
==63921==    by 0x100004D0D: fill_struct (execution.c:79)
==63921==    by 0x100004D88: execution (execution.c:92)
==63921==    by 0x100001EE3: minishel_start (minishell_start.c:70)
==63921==    by 0x100001D67: main (minishell.c:56)
==63921==  Block was alloc'd at
==63921==    at 0x10012B545: malloc (in /goinfre/hbouqssi/homebrew/Cellar/valgrind/HEAD-6ff08b6/libexec/valgrind/vgpreload_memcheck-amd64-darwin.so)
==63921==    by 0x100004A85: check_quotes (execution.c:24)
==63921==    by 0x100004D0D: fill_struct (execution.c:79)
==63921==    by 0x100004D88: execution (execution.c:92)
==63921==    by 0x100001EE3: minishel_start (minishell_start.c:70)
==63921==    by 0x100001D67: main (minishell.c:56)
==63921== 
==63921== Conditional jump or move depends on uninitialised value(s)
==63921==    at 0x100001F5A: ft_strlen (ft_strlen.c:22)
==63921==    by 0x10000278D: ft_strjoin (ft_strjoin.c:24)
==63921==    by 0x100004C66: check_quotes (execution.c:60)
==63921==    by 0x100004D0D: fill_struct (execution.c:79)
==63921==    by 0x100004D88: execution (execution.c:92)
==63921==    by 0x100001EE3: minishel_start (minishell_start.c:70)
==63921==    by 0x100001D67: main (minishell.c:56)
==63921== 
==63921== Invalid read of size 1
==63921==    at 0x1000027D5: ft_strjoin (ft_strjoin.c:28)
==63921==    by 0x100004C66: check_quotes (execution.c:60)
==63921==    by 0x100004D0D: fill_struct (execution.c:79)
==63921==    by 0x100004D88: execution (execution.c:92)
==63921==    by 0x100001EE3: minishel_start (minishell_start.c:70)
==63921==    by 0x100001D67: main (minishell.c:56)
==63921==  Address 0x1009065a0 is 0 bytes inside a block of size 1,000 free'd
==63921==    at 0x10012B91D: free (in /goinfre/hbouqssi/homebrew/Cellar/valgrind/HEAD-6ff08b6/libexec/valgrind/vgpreload_memcheck-amd64-darwin.so)
==63921==    by 0x100004C59: check_quotes (execution.c:59)
==63921==    by 0x100004D0D: fill_struct (execution.c:79)
==63921==    by 0x100004D88: execution (execution.c:92)
==63921==    by 0x100001EE3: minishel_start (minishell_start.c:70)
==63921==    by 0x100001D67: main (minishell.c:56)
==63921==  Block was alloc'd at
==63921==    at 0x10012B545: malloc (in /goinfre/hbouqssi/homebrew/Cellar/valgrind/HEAD-6ff08b6/libexec/valgrind/vgpreload_memcheck-amd64-darwin.so)
==63921==    by 0x100004A85: check_quotes (execution.c:24)
==63921==    by 0x100004D0D: fill_struct (execution.c:79)
==63921==    by 0x100004D88: execution (execution.c:92)
==63921==    by 0x100001EE3: minishel_start (minishell_start.c:70)
==63921==    by 0x100001D67: main (minishell.c:56)
==63921== 
==63921== Conditional jump or move depends on uninitialised value(s)
==63921==    at 0x10000281C: ft_strjoin (ft_strjoin.c:34)
==63921==    by 0x100004C66: check_quotes (execution.c:60)
==63921==    by 0x100004D0D: fill_struct (execution.c:79)
==63921==    by 0x100004D88: execution (execution.c:92)
==63921==    by 0x100001EE3: minishel_start (minishell_start.c:70)
==63921==    by 0x100001D67: main (minishell.c:56)
==63921== 
==63921== 
==63921== HEAP SUMMARY:
==63921==     in use at exit: 298,415 bytes in 428 blocks
==63921==   total heap usage: 704 allocs, 276 frees, 320,195 bytes allocated
==63921== 
==63921== 109 (32 direct, 77 indirect) bytes in 1 blocks are definitely lost in loss record 46 of 107
==63921==    at 0x10012B545: malloc (in /goinfre/hbouqssi/homebrew/Cellar/valgrind/HEAD-6ff08b6/libexec/valgrind/vgpreload_memcheck-amd64-darwin.so)
==63921==    by 0x100002CD1: initialize_list (initialize_tokens.c:19)
==63921==    by 0x100002F62: ft_tokenizer (tokenizing.c:38)
==63921==    by 0x100001E6F: minishel_start (minishell_start.c:63)
==63921==    by 0x100001D67: main (minishell.c:56)
==63921== 
==63921== 1,000 bytes in 1 blocks are definitely lost in loss record 64 of 107
==63921==    at 0x10012B545: malloc (in /goinfre/hbouqssi/homebrew/Cellar/valgrind/HEAD-6ff08b6/libexec/valgrind/vgpreload_memcheck-amd64-darwin.so)
==63921==    by 0x100004A93: check_quotes (execution.c:25)
==63921==    by 0x100004D0D: fill_struct (execution.c:79)
==63921==    by 0x100004D88: execution (execution.c:92)
==63921==    by 0x100001EE3: minishel_start (minishell_start.c:70)
==63921==    by 0x100001D67: main (minishell.c:56)
==63921== 
==63921== LEAK SUMMARY:
==63921==    definitely lost: 1,032 bytes in 2 blocks
==63921==    indirectly lost: 77 bytes in 4 blocks
==63921==      possibly lost: 0 bytes in 0 blocks
==63921==    still reachable: 283,339 bytes in 261 blocks
==63921==         suppressed: 13,967 bytes in 161 blocks
==63921== Reachable blocks (those to which a pointer was found) are not shown.
==63921== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==63921== 
==63921== Use --track-origins=yes to see where uninitialised values come from
==63921== For lists of detected and suppressed errors, rerun with: -s
==63921== ERROR SUMMARY: 75 errors from 11 contexts (suppressed: 4 from 4)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           ==63427== 
==63427== HEAP SUMMARY:
==63427==     in use at exit: 308,422 bytes in 522 blocks
==63427==   total heap usage: 892 allocs, 370 frees, 336,114 bytes allocated
==63427== 
==63427== 64 bytes in 4 blocks are definitely lost in loss record 42 of 115
==63427==    at 0x10012B545: malloc (in /goinfre/hbouqssi/homebrew/Cellar/valgrind/HEAD-6ff08b6/libexec/valgrind/vgpreload_memcheck-amd64-darwin.so)
==63427==    by 0x100003715: init_subcmd (parser.c:18)
==63427==    by 0x10000390A: push_cmd_and_redir (parser.c:60)
==63427==    by 0x1000039A7: ft_parse (parser.c:79)
==63427==    by 0x100001ED2: minishel_start (minishell_start.c:69)
==63427==    by 0x100001D67: main (minishell.c:56)
==63427== 
==63427== 560 (160 direct, 400 indirect) bytes in 5 blocks are definitely lost in loss record 66 of 115
==63427==    at 0x10012B545: malloc (in /goinfre/hbouqssi/homebrew/Cellar/valgrind/HEAD-6ff08b6/libexec/valgrind/vgpreload_memcheck-amd64-darwin.so)
==63427==    by 0x100002CD1: initialize_list (initialize_tokens.c:19)
==63427==    by 0x100002F62: ft_tokenizer (tokenizing.c:38)
==63427==    by 0x100001E6F: minishel_start (minishell_start.c:63)
==63427==    by 0x100001D67: main (minishell.c:56)
==63427== 
==63427== 655 bytes in 23 blocks are definitely lost in loss record 67 of 115
==63427==    at 0x10012B545: malloc (in /goinfre/hbouqssi/homebrew/Cellar/valgrind/HEAD-6ff08b6/libexec/valgrind/vgpreload_memcheck-amd64-darwin.so)
==63427==    by 0x1000027A4: ft_strjoin (ft_strjoin.c:24)
==63427==    by 0x100005409: cmd_founded_y_n (cmd_founded_y_n.c:86)
==63427==    by 0x100004E13: execution (execution.c:104)
==63427==    by 0x100001EE3: minishel_start (minishell_start.c:70)
==63427==    by 0x100001D67: main (minishell.c:56)
==63427== 
==63427== 694 bytes in 27 blocks are definitely lost in loss record 69 of 115
==63427==    at 0x10012B545: malloc (in /goinfre/hbouqssi/homebrew/Cellar/valgrind/HEAD-6ff08b6/libexec/valgrind/vgpreload_memcheck-amd64-darwin.so)
==63427==    by 0x1000027A4: ft_strjoin (ft_strjoin.c:24)
==63427==    by 0x1000049C8: execution_other_builtins (execution_other_builtins.c:48)
==63427==    by 0x100004E9C: execution (execution.c:110)
==63427==    by 0x100001EE3: minishel_start (minishell_start.c:70)
==63427==    by 0x100001D67: main (minishell.c:56)
==63427== 
==63427== 5,000 bytes in 5 blocks are definitely lost in loss record 101 of 115
==63427==    at 0x10012B545: malloc (in /goinfre/hbouqssi/homebrew/Cellar/valgrind/HEAD-6ff08b6/libexec/valgrind/vgpreload_memcheck-amd64-darwin.so)
==63427==    by 0x100004A93: check_quotes (execution.c:25)
==63427==    by 0x100004D0D: fill_struct (execution.c:79)
==63427==    by 0x100004D88: execution (execution.c:92)
==63427==    by 0x100001EE3: minishel_start (minishell_start.c:70)
==63427==    by 0x100001D67: main (minishell.c:56)
==63427== 
==63427== LEAK SUMMARY:
==63427==    definitely lost: 6,573 bytes in 64 blocks
==63427==    indirectly lost: 400 bytes in 24 blocks
==63427==      possibly lost: 0 bytes in 0 blocks
==63427==    still reachable: 287,482 bytes in 273 blocks
==63427==         suppressed: 13,967 bytes in 161 blocks
==63427== Reachable blocks (those to which a pointer was found) are not shown.
==63427== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==63427== 
==63427== Use --track-origins=yes to see where uninitialised values come from
==63427== For lists of detected and suppressed errors, rerun with: -s
==63427== ERROR SUMMARY: 3770 errors from 20 contexts (suppressed: 4 from 4)
